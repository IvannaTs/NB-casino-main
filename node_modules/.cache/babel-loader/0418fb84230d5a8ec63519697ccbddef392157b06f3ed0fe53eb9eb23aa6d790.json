{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nconst DataAndExtractLink = ({\n  render\n}) => {\n  _s();\n  const [link, setLink] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [requestCount, setRequestCount] = useState(0);\n  const maxRequests = 3; // Максимальна кількість дозволених запитів\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.adkey-seo.com/api/website/get-website/295');\n        const data = await response.json();\n        if (data.offers && data.offers.length > 0) {\n          const link = data.offers[0].link;\n          setLink(link);\n          setLoading(false);\n        } else {\n          setError('Поле \"offers\" порожнє або відсутнє в отриманих даних.');\n          setLoading(false);\n        }\n      } catch (error) {\n        setError(`Помилка при виконанні запиту: ${error.message}`);\n        setLoading(false);\n      }\n    };\n\n    // Відправляти запити, поки кількість запитів не дорівнює максимальній кількості\n    if (requestCount < maxRequests) {\n      fetchData(); // Відправка запиту\n      setRequestCount(prevCount => prevCount + 1); // Збільшення лічильника запитів\n    } else {\n      setError('Досягнуто максимальну кількість дозволених запитів');\n      setLoading(false);\n    }\n  }, [requestCount]); // Відслідковувати зміни в requestCount\n\n  // Відображення компоненту з даними, завантаженням та помилкою\n  return render({\n    link,\n    loading,\n    error\n  });\n};\n_s(DataAndExtractLink, \"ElQ6RwAYNGdKImG8dw73qDJC+qY=\");\n_c = DataAndExtractLink;\nexport default DataAndExtractLink;\nvar _c;\n$RefreshReg$(_c, \"DataAndExtractLink\");","map":{"version":3,"names":["React","useState","useEffect","DataAndExtractLink","render","_s","link","setLink","loading","setLoading","error","setError","requestCount","setRequestCount","maxRequests","fetchData","response","fetch","data","json","offers","length","message","prevCount","_c","$RefreshReg$"],"sources":["/Users/a/Documents/casino/src/components/DataAndExtractLink.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst DataAndExtractLink = ({ render }) => {\n  const [link, setLink] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [requestCount, setRequestCount] = useState(0);\n  const maxRequests = 3; // Максимальна кількість дозволених запитів\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.adkey-seo.com/api/website/get-website/295');\n        const data = await response.json();\n\n        if (data.offers && data.offers.length > 0) {\n          const link = data.offers[0].link;\n          setLink(link);\n          setLoading(false);\n        } else {\n          setError('Поле \"offers\" порожнє або відсутнє в отриманих даних.');\n          setLoading(false);\n        }\n      } catch (error) {\n        setError(`Помилка при виконанні запиту: ${error.message}`);\n        setLoading(false);\n      }\n    };\n\n    // Відправляти запити, поки кількість запитів не дорівнює максимальній кількості\n    if (requestCount < maxRequests) {\n      fetchData(); // Відправка запиту\n      setRequestCount(prevCount => prevCount + 1); // Збільшення лічильника запитів\n    } else {\n      setError('Досягнуто максимальну кількість дозволених запитів');\n      setLoading(false);\n    }\n  }, [requestCount]); // Відслідковувати зміни в requestCount\n\n  // Відображення компоненту з даними, завантаженням та помилкою\n  return render({ link, loading, error });\n};\n\nexport default DataAndExtractLink;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAMa,WAAW,GAAG,CAAC,CAAC,CAAC;;EAEvBZ,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuD,CAAC;QACrF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,IAAID,IAAI,CAACE,MAAM,IAAIF,IAAI,CAACE,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;UACzC,MAAMf,IAAI,GAAGY,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAACd,IAAI;UAChCC,OAAO,CAACD,IAAI,CAAC;UACbG,UAAU,CAAC,KAAK,CAAC;QACnB,CAAC,MAAM;UACLE,QAAQ,CAAC,uDAAuD,CAAC;UACjEF,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,QAAQ,CAAE,iCAAgCD,KAAK,CAACY,OAAQ,EAAC,CAAC;QAC1Db,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;;IAED;IACA,IAAIG,YAAY,GAAGE,WAAW,EAAE;MAC9BC,SAAS,CAAC,CAAC,CAAC,CAAC;MACbF,eAAe,CAACU,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC,MAAM;MACLZ,QAAQ,CAAC,oDAAoD,CAAC;MAC9DF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACG,YAAY,CAAC,CAAC,CAAC,CAAC;;EAEpB;EACA,OAAOR,MAAM,CAAC;IAAEE,IAAI;IAAEE,OAAO;IAAEE;EAAM,CAAC,CAAC;AACzC,CAAC;AAACL,EAAA,CAvCIF,kBAAkB;AAAAqB,EAAA,GAAlBrB,kBAAkB;AAyCxB,eAAeA,kBAAkB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}