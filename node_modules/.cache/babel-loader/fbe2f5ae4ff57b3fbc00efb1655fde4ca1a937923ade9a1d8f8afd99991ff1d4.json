{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nconst DataAndExtractLink = ({\n  render\n}) => {\n  _s();\n  const [link, setLink] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isFetching, setIsFetching] = useState(false);\n  const maxRequests = 3; // Максимальна кількість дозволених запитів\n  const requestInterval = 2000; // Інтервал між запитами (в мілісекундах)\n  let requestCount = 0; // Лічильник запитів\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsFetching(true);\n      try {\n        const response = await fetch('https://api.adkey-seo.com/api/website/get-website/295');\n        const data = await response.json();\n        if (data.offers && data.offers.length > 0) {\n          const link = data.offers[0].link;\n          setLink(link);\n          setLoading(false);\n        } else {\n          setError('Поле \"offers\" порожнє або відсутнє в отриманих даних.');\n          setLoading(false);\n        }\n      } catch (error) {\n        setError(`Помилка при виконанні запиту: ${error.message}`);\n        setLoading(false);\n      } finally {\n        setIsFetching(false);\n      }\n    };\n\n    // Функція для відправлення запиту з обмеженням за часом\n    const sendRequestWithInterval = () => {\n      if (requestCount < maxRequests) {\n        fetchData();\n        requestCount++;\n      } else {\n        setError('Досягнуто максимальну кількість дозволених запитів');\n        setLoading(false);\n      }\n    };\n\n    // Встановлюємо таймер для відправлення запитів з вказаним інтервалом\n    const interval = setInterval(() => {\n      if (!isFetching) {\n        sendRequestWithInterval();\n      }\n    }, requestInterval);\n\n    // Зупиняємо таймер після завершення роботи компонента\n    return () => clearInterval(interval);\n  }, []); // Викликаємо ефект тільки після монтування компонента\n\n  // Відображення компоненту з даними, завантаженням та помилкою\n  return render({\n    link,\n    loading,\n    error\n  });\n};\n_s(DataAndExtractLink, \"muwT71rC7jq6cO+r7YtGpBJZb3Y=\");\n_c = DataAndExtractLink;\nexport default DataAndExtractLink;\nvar _c;\n$RefreshReg$(_c, \"DataAndExtractLink\");","map":{"version":3,"names":["React","useState","useEffect","DataAndExtractLink","render","_s","link","setLink","loading","setLoading","error","setError","isFetching","setIsFetching","maxRequests","requestInterval","requestCount","fetchData","response","fetch","data","json","offers","length","message","sendRequestWithInterval","interval","setInterval","clearInterval","_c","$RefreshReg$"],"sources":["/Users/a/Documents/casino/src/components/DataAndExtractLink.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst DataAndExtractLink = ({ render }) => {\n  const [link, setLink] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isFetching, setIsFetching] = useState(false);\n  const maxRequests = 3; // Максимальна кількість дозволених запитів\n  const requestInterval = 2000; // Інтервал між запитами (в мілісекундах)\n  let requestCount = 0; // Лічильник запитів\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsFetching(true);\n      try {\n        const response = await fetch('https://api.adkey-seo.com/api/website/get-website/295');\n        const data = await response.json();\n\n        if (data.offers && data.offers.length > 0) {\n          const link = data.offers[0].link;\n          setLink(link);\n          setLoading(false);\n        } else {\n          setError('Поле \"offers\" порожнє або відсутнє в отриманих даних.');\n          setLoading(false);\n        }\n      } catch (error) {\n        setError(`Помилка при виконанні запиту: ${error.message}`);\n        setLoading(false);\n      } finally {\n        setIsFetching(false);\n      }\n    };\n\n    // Функція для відправлення запиту з обмеженням за часом\n    const sendRequestWithInterval = () => {\n      if (requestCount < maxRequests) {\n        fetchData();\n        requestCount++;\n      } else {\n        setError('Досягнуто максимальну кількість дозволених запитів');\n        setLoading(false);\n      }\n    };\n\n    // Встановлюємо таймер для відправлення запитів з вказаним інтервалом\n    const interval = setInterval(() => {\n      if (!isFetching) {\n        sendRequestWithInterval();\n      }\n    }, requestInterval);\n\n    // Зупиняємо таймер після завершення роботи компонента\n    return () => clearInterval(interval);\n  }, []); // Викликаємо ефект тільки після монтування компонента\n\n  // Відображення компоненту з даними, завантаженням та помилкою\n  return render({ link, loading, error });\n};\n\nexport default DataAndExtractLink;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMa,WAAW,GAAG,CAAC,CAAC,CAAC;EACvB,MAAMC,eAAe,GAAG,IAAI,CAAC,CAAC;EAC9B,IAAIC,YAAY,GAAG,CAAC,CAAC,CAAC;;EAEtBd,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BJ,aAAa,CAAC,IAAI,CAAC;MACnB,IAAI;QACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuD,CAAC;QACrF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,IAAID,IAAI,CAACE,MAAM,IAAIF,IAAI,CAACE,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;UACzC,MAAMjB,IAAI,GAAGc,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAAChB,IAAI;UAChCC,OAAO,CAACD,IAAI,CAAC;UACbG,UAAU,CAAC,KAAK,CAAC;QACnB,CAAC,MAAM;UACLE,QAAQ,CAAC,uDAAuD,CAAC;UACjEF,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,QAAQ,CAAE,iCAAgCD,KAAK,CAACc,OAAQ,EAAC,CAAC;QAC1Df,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,SAAS;QACRI,aAAa,CAAC,KAAK,CAAC;MACtB;IACF,CAAC;;IAED;IACA,MAAMY,uBAAuB,GAAGA,CAAA,KAAM;MACpC,IAAIT,YAAY,GAAGF,WAAW,EAAE;QAC9BG,SAAS,CAAC,CAAC;QACXD,YAAY,EAAE;MAChB,CAAC,MAAM;QACLL,QAAQ,CAAC,oDAAoD,CAAC;QAC9DF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;;IAED;IACA,MAAMiB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAI,CAACf,UAAU,EAAE;QACfa,uBAAuB,CAAC,CAAC;MAC3B;IACF,CAAC,EAAEV,eAAe,CAAC;;IAEnB;IACA,OAAO,MAAMa,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,OAAOtB,MAAM,CAAC;IAAEE,IAAI;IAAEE,OAAO;IAAEE;EAAM,CAAC,CAAC;AACzC,CAAC;AAACL,EAAA,CAxDIF,kBAAkB;AAAA0B,EAAA,GAAlB1B,kBAAkB;AA0DxB,eAAeA,kBAAkB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}