{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nconst DataAndExtractLink = ({\n  render\n}) => {\n  _s();\n  const [link, setLink] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [retryCount, setRetryCount] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.adkey-seo.com/api/website/get-website/295');\n        if (response.ok) {\n          const data = await response.json();\n          if (data.offers && data.offers.length > 0) {\n            const link = data.offers[0].link;\n            setLink(link);\n            setLoading(false);\n          } else {\n            setError('Поле \"offers\" порожнє або відсутнє в отриманих даних.');\n            setLoading(false);\n          }\n        } else if (response.status === 429) {\n          const delay = Math.pow(2, retryCount) * 1000; // Exponential backoff\n          setTimeout(() => {\n            setRetryCount(retryCount + 1);\n            fetchData(); // Retry the request\n          }, delay);\n        } else {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n      } catch (error) {\n        setError(`Помилка при виконанні запиту: ${error.message}`);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [retryCount]); // Retry whenever retryCount changes\n\n  return render({\n    link,\n    loading,\n    error\n  });\n};\n_s(DataAndExtractLink, \"y/GlebV2BT4vVzp0COP68qUrSU8=\");\n_c = DataAndExtractLink;\nexport default DataAndExtractLink;\nvar _c;\n$RefreshReg$(_c, \"DataAndExtractLink\");","map":{"version":3,"names":["React","useState","useEffect","DataAndExtractLink","render","_s","link","setLink","loading","setLoading","error","setError","retryCount","setRetryCount","fetchData","response","fetch","ok","data","json","offers","length","status","delay","Math","pow","setTimeout","Error","message","_c","$RefreshReg$"],"sources":["/Users/a/Documents/casino/src/components/DataAndExtractLink.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst DataAndExtractLink = ({ render }) => {\n  const [link, setLink] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [retryCount, setRetryCount] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.adkey-seo.com/api/website/get-website/295');\n        \n        if (response.ok) {\n          const data = await response.json();\n          if (data.offers && data.offers.length > 0) {\n            const link = data.offers[0].link;\n            setLink(link);\n            setLoading(false);\n          } else {\n            setError('Поле \"offers\" порожнє або відсутнє в отриманих даних.');\n            setLoading(false);\n          }\n        } else if (response.status === 429) {\n          const delay = Math.pow(2, retryCount) * 1000; // Exponential backoff\n          setTimeout(() => {\n            setRetryCount(retryCount + 1);\n            fetchData(); // Retry the request\n          }, delay);\n        } else {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n      } catch (error) {\n        setError(`Помилка при виконанні запиту: ${error.message}`);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [retryCount]); // Retry whenever retryCount changes\n\n  return render({ link, loading, error });\n};\n\nexport default DataAndExtractLink;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuD,CAAC;QAErF,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClC,IAAID,IAAI,CAACE,MAAM,IAAIF,IAAI,CAACE,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;YACzC,MAAMf,IAAI,GAAGY,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAACd,IAAI;YAChCC,OAAO,CAACD,IAAI,CAAC;YACbG,UAAU,CAAC,KAAK,CAAC;UACnB,CAAC,MAAM;YACLE,QAAQ,CAAC,uDAAuD,CAAC;YACjEF,UAAU,CAAC,KAAK,CAAC;UACnB;QACF,CAAC,MAAM,IAAIM,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;UAClC,MAAMC,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEb,UAAU,CAAC,GAAG,IAAI,CAAC,CAAC;UAC9Cc,UAAU,CAAC,MAAM;YACfb,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC;YAC7BE,SAAS,CAAC,CAAC,CAAC,CAAC;UACf,CAAC,EAAES,KAAK,CAAC;QACX,CAAC,MAAM;UACL,MAAM,IAAII,KAAK,CAAE,uBAAsBZ,QAAQ,CAACO,MAAO,EAAC,CAAC;QAC3D;MACF,CAAC,CAAC,OAAOZ,KAAK,EAAE;QACdC,QAAQ,CAAE,iCAAgCD,KAAK,CAACkB,OAAQ,EAAC,CAAC;QAC1DnB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDK,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACF,UAAU,CAAC,CAAC,CAAC,CAAC;;EAElB,OAAOR,MAAM,CAAC;IAAEE,IAAI;IAAEE,OAAO;IAAEE;EAAM,CAAC,CAAC;AACzC,CAAC;AAACL,EAAA,CAxCIF,kBAAkB;AAAA0B,EAAA,GAAlB1B,kBAAkB;AA0CxB,eAAeA,kBAAkB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}