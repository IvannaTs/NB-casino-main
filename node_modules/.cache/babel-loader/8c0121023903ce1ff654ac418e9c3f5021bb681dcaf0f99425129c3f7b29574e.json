{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Оголосіть окремий об'єкт AppInfo\nconst AppInfo = {\n  name: '',\n  version: '',\n  description: ''\n};\nexport const ServerDataComponent = ({\n  onDataReceived\n}) => {\n  _s();\n  const [serverData, setServerData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.adkey-seo.com/api/website/get-website/295');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data from server');\n        }\n        const data = await response.json();\n        setServerData(data);\n        onDataReceived(data);\n\n        // Оновіть об'єкт AppInfo на основі даних з сервера\n        AppInfo.name = (data === null || data === void 0 ? void 0 : data.name) || '';\n        AppInfo.version = (data === null || data === void 0 ? void 0 : data.version) || '';\n        AppInfo.description = (data === null || data === void 0 ? void 0 : data.description) || '';\n\n        // Виведіть значення об'єкта AppInfo\n        console.log('AppInfo:', AppInfo);\n      } catch (error) {\n        console.error('Error:', error.message);\n      }\n    };\n    fetchData();\n  }, [onDataReceived]);\n  return null;\n};\n_s(ServerDataComponent, \"k6QEYYEPlawjEIhLVlbbgEWQT84=\");\n_c = ServerDataComponent;\nexport default ServerDataComponent;\nvar _c;\n$RefreshReg$(_c, \"ServerDataComponent\");","map":{"version":3,"names":["React","useState","useEffect","AppInfo","name","version","description","ServerDataComponent","onDataReceived","_s","serverData","setServerData","fetchData","response","fetch","ok","Error","data","json","console","log","error","message","_c","$RefreshReg$"],"sources":["/Users/a/Documents/casino 2/src/components/AppInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// Оголосіть окремий об'єкт AppInfo\nconst AppInfo = {\n  name: '',\n  version: '',\n  description: ''\n};\n\nexport const ServerDataComponent = ({ onDataReceived }) => {\n  const [serverData, setServerData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.adkey-seo.com/api/website/get-website/295');\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch data from server');\n        }\n\n        const data = await response.json();\n\n        setServerData(data);\n        onDataReceived(data);\n\n        // Оновіть об'єкт AppInfo на основі даних з сервера\n        AppInfo.name = data?.name || '';\n        AppInfo.version = data?.version || '';\n        AppInfo.description = data?.description || '';\n\n        // Виведіть значення об'єкта AppInfo\n        console.log('AppInfo:', AppInfo);\n      } catch (error) {\n        console.error('Error:', error.message);\n      }\n    };\n\n    fetchData();\n  }, [onDataReceived]);\n\n  return null;\n};\n\nexport default ServerDataComponent;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AACA,MAAMC,OAAO,GAAG;EACdC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,EAAE;EACXC,WAAW,EAAE;AACf,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuD,CAAC;QAErF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;QACrD;QAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAElCP,aAAa,CAACM,IAAI,CAAC;QACnBT,cAAc,CAACS,IAAI,CAAC;;QAEpB;QACAd,OAAO,CAACC,IAAI,GAAG,CAAAa,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEb,IAAI,KAAI,EAAE;QAC/BD,OAAO,CAACE,OAAO,GAAG,CAAAY,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEZ,OAAO,KAAI,EAAE;QACrCF,OAAO,CAACG,WAAW,GAAG,CAAAW,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEX,WAAW,KAAI,EAAE;;QAE7C;QACAa,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEjB,OAAO,CAAC;MAClC,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACC,OAAO,CAAC;MACxC;IACF,CAAC;IAEDV,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,cAAc,CAAC,CAAC;EAEpB,OAAO,IAAI;AACb,CAAC;AAACC,EAAA,CAjCWF,mBAAmB;AAAAgB,EAAA,GAAnBhB,mBAAmB;AAmChC,eAAeA,mBAAmB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}