{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nconst DataFetcher = ({\n  onDataFetch\n}) => {\n  _s();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.adkey-seo.com/api/website/get-website/295');\n        if (!response.ok) {\n          if (response.status === 429) {\n            // If rate limited, wait for some time before retrying\n            await new Promise(resolve => setTimeout(resolve, 5000)); // Wait for 5 seconds (adjust as needed)\n            return fetchData(); // Retry the request\n          } else {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n        }\n        const data = await response.json();\n        onDataFetch(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [onDataFetch]);\n  return null;\n};\n_s(DataFetcher, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = DataFetcher;\nexport default DataFetcher;\nvar _c;\n$RefreshReg$(_c, \"DataFetcher\");","map":{"version":3,"names":["React","useState","useEffect","DataFetcher","onDataFetch","_s","fetchData","response","fetch","ok","status","Promise","resolve","setTimeout","Error","data","json","error","console","_c","$RefreshReg$"],"sources":["/Users/a/Documents/casino 2/src/components/DataFetcher.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst DataFetcher = ({ onDataFetch }) => {\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch('https://api.adkey-seo.com/api/website/get-website/295');\n                if (!response.ok) {\n                    if (response.status === 429) {\n                        // If rate limited, wait for some time before retrying\n                        await new Promise(resolve => setTimeout(resolve, 5000)); // Wait for 5 seconds (adjust as needed)\n                        return fetchData(); // Retry the request\n                    } else {\n                        throw new Error(`HTTP error! status: ${response.status}`);\n                    }\n                }\n                const data = await response.json();\n                onDataFetch(data);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n\n        fetchData();\n    }, [onDataFetch]);\n\n    return null;\n};\n\nexport default DataFetcher;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACrCH,SAAS,CAAC,MAAM;IACZ,MAAMI,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuD,CAAC;QACrF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;YACzB;YACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YACzD,OAAON,SAAS,CAAC,CAAC,CAAC,CAAC;UACxB,CAAC,MAAM;YACH,MAAM,IAAIQ,KAAK,CAAE,uBAAsBP,QAAQ,CAACG,MAAO,EAAC,CAAC;UAC7D;QACJ;QACA,MAAMK,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCZ,WAAW,CAACW,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;IAEDX,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC;EAEjB,OAAO,IAAI;AACf,CAAC;AAACC,EAAA,CAzBIF,WAAW;AAAAgB,EAAA,GAAXhB,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}